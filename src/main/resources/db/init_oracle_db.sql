--  generated by http://www.sqlines.com/online
-- DROP DATABASE salesystem;
-- CREATE DATABASE salesystem;
ALTER SESSION SET CURRENT_SCHEMA = salesystem;


BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE sales';
  EXCEPTION
  WHEN OTHERS THEN NULL;
END;
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE products';
  EXCEPTION
  WHEN OTHERS THEN NULL;
END;
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE order_items';
  EXCEPTION
  WHEN OTHERS THEN NULL;
END;
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE discounts';
  EXCEPTION
  WHEN OTHERS THEN NULL;
END;

  
CREATE TABLE products (
  id    NUMBER(10) PRIMARY KEY NOT NULL,
  name  VARCHAR2(4000)            NOT NULL,
  price BINARY_FLOAT               NOT NULL
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE products_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER products_seq_tr
BEFORE INSERT ON products FOR EACH ROW
WHEN (NEW.id IS NULL)
  BEGIN
    SELECT products_seq.NEXTVAL INTO :NEW.id FROM DUAL;
  END;
/
CREATE UNIQUE INDEX products_unique_name_idx
  ON products (name);


CREATE TABLE sales (
  id                 NUMBER(10) PRIMARY KEY NOT NULL,
  cost               BINARY_FLOAT               NOT NULL,
  cost_with_discount BINARY_FLOAT DEFAULT 0               NOT NULL,
  date               TIMESTAMP DEFAULT systimestamp          NOT NULL
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE sales_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER sales_seq_tr
 BEFORE INSERT ON sales FOR EACH ROW
 WHEN (NEW.id IS NULL)
BEGIN
 SELECT sales_seq.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/


CREATE TABLE order_items (
  id         NUMBER(10) PRIMARY KEY NOT NULL,
  sale_id    NUMBER(10),
  product_id NUMBER(10),
  quantity   NUMBER(10)            NOT NULL,
  sum        BINARY_FLOAT DEFAULT 0,
  FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE,
  FOREIGN KEY (sale_id) REFERENCES sales (id) ON DELETE CASCADE
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE order_items_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER order_items_seq_tr
 BEFORE INSERT ON order_items FOR EACH ROW
 WHEN (NEW.id IS NULL)
BEGIN
 SELECT order_items_seq.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/


CREATE TABLE discounts (
  id         NUMBER(10) PRIMARY KEY NOT NULL,
  time_start TIMESTAMP DEFAULT systimestamp          NOT NULL ,
  time_end   TIMESTAMP,
  amount     NUMBER(10) DEFAULT 0            NOT NULL,
  product_id NUMBER(10),
  FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE discounts_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER discounts_seq_tr
 BEFORE INSERT ON discounts FOR EACH ROW
 WHEN (NEW.id IS NULL)
BEGIN
 SELECT discounts_seq.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/
